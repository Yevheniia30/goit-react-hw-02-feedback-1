{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","App.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statistics","feedbackQuantity","isNaN","FeedbackBtn","feedback","onLeaveFeedback","btn","type","data-feedback","onClick","FeedbackOptions","options","map","option","Section","title","children","section","Notification","message","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","keys","Object","Component","ReactDOM","render","document","getElementById"],"mappings":"oJACAA,EAAOC,QAAU,CAAC,QAAU,2B,iLCyBbC,EAvBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAWC,IAAEC,WAAlB,UACE,oBAAGF,UAAWC,IAAEE,iBAAhB,mBAAyCR,KACzC,oBAAGK,UAAWC,IAAEE,iBAAhB,sBAA4CP,EAA5C,OACA,oBAAGI,UAAWC,IAAEE,iBAAhB,kBAAwCN,KACxC,oBAAGG,UAAWC,IAAEE,iBAAhB,oBAA0CL,KAC1C,oBAAGE,UAAWC,IAAEE,iBAAhB,gCACsBC,MAAML,GAAsB,EAAIA,EAAoB,IAD1E,W,gBCPAM,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,wBACEP,UAAWC,IAAEO,IACbC,KAAK,SACLC,gBAAeJ,EACfK,QAASJ,EAJX,SAMGD,KAoBQM,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,gBAClC,OAAOM,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAEET,SAAUS,EACVR,gBAAiBA,GAFZQ,O,iBCFIC,EAdC,SAAC,GAA8C,IAAD,IAA3CC,aAA2C,MAAnC,mBAAmC,EAAfC,EAAe,EAAfA,SAC7C,OACE,0BAASlB,UAAWC,IAAEkB,QAAtB,UACE,6BAAKF,IACL,8BAAMC,QCGGE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC+DEC,E,4MA1DbC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,eAAiB,YAAiB,IACxBlB,EADuB,EAAbmB,OACUC,QAApBpB,SACR,EAAKqB,UAAS,SAAAC,GAAS,sBACpBtB,EAAWsB,EAAUtB,GAAY,O,EAItCuB,mBAAqB,SAAAC,GACnB,OAAOA,EAAOC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,M,EAG7CC,gCAAkC,SAACvC,EAAMG,GACvC,OAAOqC,KAAKC,MAAOzC,EAAOG,EAAS,M,4CAGrC,WAAU,IAAD,EACwBuC,KAAKd,MAA5B5B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjByC,EAAOC,OAAOD,KAAKD,KAAKd,OACxBO,EAASS,OAAOT,OAAOO,KAAKd,OAC5BzB,EAAQuC,KAAKR,mBAAmBC,GAChC/B,EAAqBsC,KAAKH,gCAC9BvC,EACAG,GAGF,OACE,sBAAKE,UAAWC,IAAEqB,IAAlB,UACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACEJ,QAASyB,EACT/B,gBAAiB8B,KAAKb,mBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACa,IAAVnB,EACC,cAAC,EAAD,CAAcuB,QAAQ,sBAEtB,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAlDhByC,aCDlBC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,U,kBCR1BpD,EAAOC,QAAU,CAAC,IAAM,mB,kBCAxBD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.9c35a448.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1EcoH\"};","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={s.statistics}>\n      <p className={s.feedbackQuantity}>Good: {good}</p>\n      <p className={s.feedbackQuantity}>Neutral: {neutral} </p>\n      <p className={s.feedbackQuantity}>Bad: {bad}</p>\n      <p className={s.feedbackQuantity}>Total: {total}</p>\n      <p className={s.feedbackQuantity}>\n        Positive feedback: {isNaN(positivePercentage) ? 0 : positivePercentage}{' '}\n        %\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      className={s.btn}\n      type=\"button\"\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map(option => (\n    <FeedbackBtn\n      key={option}\n      feedback={option}\n      onLeaveFeedback={onLeaveFeedback}\n    />\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title = 'Feedbacks widget', children }) => {\n  return (\n    <section className={s.section}>\n      <h2>{title}</h2>\n      <div>{children}</div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport s from './App.module.css';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback = values => {\n    return values.reduce((acc, value) => acc + value);\n  };\n\n  countPositiveFeedbackPercentage = (good, total) => {\n    return Math.round((good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const keys = Object.keys(this.state);\n    const values = Object.values(this.state);\n    const total = this.countTotalFeedback(values);\n    const positivePercentage = this.countPositiveFeedbackPercentage(\n      good,\n      total,\n    );\n\n    return (\n      <div className={s.App}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keys}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__qaWdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1lgle\"};"],"sourceRoot":""}